[{"C:\\Users\\kanis\\React-tooltip-app\\src\\index.js":"1","C:\\Users\\kanis\\React-tooltip-app\\src\\App.js":"2","C:\\Users\\kanis\\React-tooltip-app\\src\\reportWebVitals.js":"3","C:\\Users\\kanis\\React-tooltip-app\\src\\Tooltip.js":"4","C:\\Users\\kanis\\React-tooltip-app\\src\\Forms.js":"5"},{"size":535,"mtime":1692504851159,"results":"6","hashOfConfig":"7"},{"size":624,"mtime":1692767984605,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1692504880734,"results":"9","hashOfConfig":"7"},{"size":725,"mtime":1692759632483,"results":"10","hashOfConfig":"7"},{"size":2741,"mtime":1692769714642,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1bta032",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kanis\\React-tooltip-app\\src\\index.js",[],[],[],"C:\\Users\\kanis\\React-tooltip-app\\src\\App.js",[],[],"C:\\Users\\kanis\\React-tooltip-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\kanis\\React-tooltip-app\\src\\Tooltip.js",["30","31"],[],"import React, { useState } from 'react';\nimport './Tooltip.css';\n\nfunction Tooltip(props) {\n  const [visible,setVisible] = useState(true);\n  \n \n  const {\n    content,\n    position = \"top\", // Default is top\n    style = {}\n  } = props;\n\n  const contentStyle = {\n    ...style,\n    ...position && { [position]: 'auto' } // Add the class for positioning\n  };\n\n  return (\n\n    <div className=\"position\">\n      <div className=\"tooltip-outline\">\n        <div\n        className=\"tooltip\" \n        >\n        button 1\n        \n          <div className={`tooltip-content ${position}`} style={contentStyle}>\n            {content}\n          </div>\n        \n        </div>\n      </div>\n    </div>\n\n\n   \n    \n  );\n}\n\nexport default Tooltip;",[],"C:\\Users\\kanis\\React-tooltip-app\\src\\Forms.js",[],[],{"ruleId":"32","severity":1,"message":"33","line":5,"column":10,"nodeType":"34","messageId":"35","endLine":5,"endColumn":17},{"ruleId":"32","severity":1,"message":"36","line":5,"column":18,"nodeType":"34","messageId":"35","endLine":5,"endColumn":28},"no-unused-vars","'visible' is assigned a value but never used.","Identifier","unusedVar","'setVisible' is assigned a value but never used."]